% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_simulation.R
\name{run_survival_simulation}
\alias{run_survival_simulation}
\title{run_survival_simulation}
\usage{
run_survival_simulation(
  n_replicates = 10,
  n_train = 1000,
  n_test = 500,
  p = 10,
  data_params = list(),
  models_to_run = NULL,
  model_params = list(),
  eval_times = seq(0.1, 3, by = 0.2),
  seeds = NULL,
  save_intermediate = FALSE,
  results_dir = "simulation_results",
  generate_plots = TRUE,
  generate_report = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{n_replicates}{Number of simulation replicates}

\item{n_train}{Sample size for training data}

\item{n_test}{Sample size for test data}

\item{p}{Number of predictors}

\item{data_params}{List of parameters for data generation (passed to generate_survival_data)}

\item{models_to_run}{Character vector of model names to run (NULL for all)}

\item{model_params}{List of model-specific parameters}

\item{eval_times}{Time points for evaluation}

\item{seeds}{Optional vector of random seeds (one per replicate)}

\item{generate_plots}{Logical, whether to generate and save plots (default TRUE)}

\item{generate_report}{Logical, whether to generate and save a summary report (default TRUE)}
}
\value{
A list containing aggregated results across all replicates:
  \item{calibration_results}{Calibration metrics aggregated across replicates}
  \item{accuracy_results}{Accuracy metrics aggregated across replicates}
  \item{replicate_results}{Individual results from each replicate (if save_intermediate=TRUE)}
  \item{simulation_params}{Parameters used for the simulation}
  \item{summary}{Overall summary statistics}
}
\description{
Run a complete simulation study for survival models with multiple replicates.
Generates simulated data, trains models, makes predictions, and evaluates performance.
}
\examples{
\dontrun{
# Run simulation with 10 replicates
sim_results <- run_survival_simulation(
  n_replicates = 10,
  n_train = 500,
  n_test = 200,
  p = 5,
  data_params = list(
    baseline_hazard_type = "weibull",
    baseline_params = list(shape = 1.5, scale = 2),
    linear_effects = c(0.5, -0.3, 0.2, -0.1, 0.4),
    censoring_rate = 0.3
  ),
  models_to_run = c("Cox", "gbm", "xgboost"),
  eval_times = seq(0.1, 3, by = 0.2)
)
}

}
